doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Premium Subscription - RaddiWala
    link(rel="stylesheet", href="/css/style.css")
    link(rel="stylesheet", href="/css/dashboard.css")
    link(href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css", rel="stylesheet")
    style.
      .subscription-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }

      .subscription-status {
        background: white;
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      }

      .status-header {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
      }

      .status-header i {
        font-size: 2rem;
        color: #2c5530;
      }

      .status-header.premium i {
        color: #ffd700;
      }

      .status-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
      }

      .status-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
      }

      .status-label {
        font-size: 0.9rem;
        color: #666;
        font-weight: 500;
      }

      .status-value {
        font-size: 1.2rem;
        font-weight: bold;
        color: #2c5530;
      }

      .status-value.premium {
        color: #ffd700;
      }

      .plans-section {
        margin-bottom: 30px;
      }

      .plans-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 30px;
        margin-top: 20px;
      }

      .plan-card {
        background: white;
        border-radius: 12px;
        padding: 30px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        position: relative;
      }

      .plan-card.premium {
        border: 3px solid #2c5530;
        transform: scale(1.05);
      }

      .plan-badge {
        position: absolute;
        top: -10px;
        right: 20px;
        background: #2c5530;
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: bold;
      }

      .plan-header {
        text-align: center;
        margin-bottom: 25px;
      }

      .plan-title {
        font-size: 1.5rem;
        margin-bottom: 10px;
        color: #2c5530;
      }

      .plan-price {
        font-size: 2.5rem;
        font-weight: bold;
        color: #2c5530;
      }

      .plan-price span {
        font-size: 1rem;
        color: #666;
      }

      .plan-features {
        margin-bottom: 25px;
      }

      .plan-features ul {
        list-style: none;
        padding: 0;
      }

      .plan-features li {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 12px;
        padding: 8px 0;
      }

      .plan-features i {
        color: #28a745;
        font-size: 1.1rem;
      }

      .plan-action {
        text-align: center;
      }

      .upgrade-btn {
        width: 100%;
        padding: 15px;
        font-size: 1.1rem;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .upgrade-btn.primary {
        background: #2c5530;
        color: white;
      }

      .upgrade-btn.primary:hover {
        background: #1e3a21;
        transform: translateY(-2px);
      }

      .upgrade-btn.success {
        background: #28a745;
        color: white;
      }

      .upgrade-btn.success:hover {
        background: #218838;
        transform: translateY(-2px);
      }

      .payment-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 1000;
        align-items: center;
        justify-content: center;
      }

      .modal-content {
        background: white;
        border-radius: 12px;
        padding: 30px;
        max-width: 500px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
      }

      .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
      }

      .modal-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #666;
      }

      .payment-options {
        margin: 20px 0;
      }

      .payment-option {
        display: flex;
        align-items: center;
        padding: 15px;
        border: 2px solid #eee;
        border-radius: 8px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .payment-option:hover {
        border-color: #2c5530;
        background: #f8f9fa;
      }

      .payment-option.selected {
        border-color: #2c5530;
        background: #f0f8f0;
      }

      .payment-icon {
        font-size: 1.5rem;
        margin-right: 15px;
        color: #2c5530;
      }

      .payment-info h4 {
        margin: 0 0 5px 0;
        color: #2c5530;
      }

      .payment-info p {
        margin: 0;
        color: #666;
        font-size: 0.9rem;
      }

      .modal-actions {
        display: flex;
        gap: 15px;
        margin-top: 25px;
      }

      .modal-actions button {
        flex: 1;
        padding: 12px;
        border: none;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .btn-cancel {
        background: #6c757d;
        color: white;
      }

      .btn-cancel:hover {
        background: #5a6268;
      }

      .btn-purchase {
        background: #2c5530;
        color: white;
      }

      .btn-purchase:hover {
        background: #1e3a21;
      }

      .btn-purchase:disabled {
        background: #ccc;
        cursor: not-allowed;
      }

      .loading {
        opacity: 0.7;
        pointer-events: none;
      }

      .loading i {
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }

      .warning-message {
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        color: #856404;
        padding: 15px;
        border-radius: 8px;
        margin-top: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
        grid-column: 1 / -1;
      }

      .demo-notice {
        background: #e3f2fd;
        border: 1px solid #bbdefb;
        color: #1565c0;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
      }

  body
    // Navigation Bar
    nav.navbar
      .nav-container
        .nav-logo
          img(src="/logo.png", alt="RaddiWala Logo", onclick="window.location.href='/'")
          span RaddiWala
        .nav-menu
          a.nav-link(href="/raddiwala/ongoing-requests") Browse Requests
          a.nav-link(href="/raddiwala/pending-pickups") My Pickups
          a.nav-link(href="/raddiwala/completed-pickups") History
          a.nav-link.active(href="/raddiwala/subscription") Premium
          a.nav-link(href="/raddiwala/profile") Profile
        .nav-user
          a.nav-link(href="/logout") Logout

    // Main Content
    .dashboard-container
      .subscription-page
        h1 Premium Subscription

        // Subscription Status
        .subscription-status#subscriptionStatus
          .status-header
            i.fas.fa-spinner.fa-spin
            h2 Loading subscription status...

        // Plans Comparison
        .plans-section
          h2 Choose Your Plan
          .plans-grid
            // Free Plan
            .plan-card
              .plan-header
                .plan-title Free Plan
                .plan-price ₹0<span>/month</span>
              .plan-features
                ul
                  li
                    i.fas.fa-check
                    span Up to 50 pickup requests per month
                  li
                    i.fas.fa-check
                    span Basic customer support
                  li
                    i.fas.fa-check
                    span Standard bid placement
              .plan-action
                // No action button for free plan

            // Premium Plan
            .plan-card.premium
              .plan-badge RECOMMENDED
              .plan-header
                .plan-title Premium Plan
                .plan-price ₹30<span>/month</span>
              .plan-features
                ul
                  li
                    i.fas.fa-check
                    span Unlimited pickup requests
                  li
                    i.fas.fa-check
                    span Priority customer support
                  li
                    i.fas.fa-check
                    span Premium badge on profile
                  li
                    i.fas.fa-check
                    span Advanced analytics
                  li
                    i.fas.fa-check
                    span Monthly earnings report
              .plan-action
                button.upgrade-btn.primary#upgradeBtn(onclick="showPaymentModal()") Upgrade to Premium

    // Payment Modal
    .payment-modal#paymentModal
      .modal-content
        .modal-header
          h3 Purchase Premium Subscription
          button.modal-close(onclick="hidePaymentModal()") &times;

        .demo-notice
          i.fas.fa-info-circle
          span This is a demo. In production, this would integrate with real payment gateways.

        .payment-options
          .payment-option(onclick="selectPayment('upi')" data-method="upi")
            .payment-icon
              i.fas.fa-mobile-alt
            .payment-info
              h4 UPI Payment
              p Google Pay, PhonePe, Paytm

          .payment-option(onclick="selectPayment('card')" data-method="card")
            .payment-icon
              i.fas.fa-credit-card
            .payment-info
              h4 Credit/Debit Card
              p Visa, Mastercard, RuPay

          .payment-option(onclick="selectPayment('netbanking')" data-method="netbanking")
            .payment-icon
              i.fas.fa-university
            .payment-info
              h4 Net Banking
              p All major banks supported

        .modal-actions
          button.btn-cancel(onclick="hidePaymentModal()") Cancel
          button.btn-purchase#purchaseBtn(onclick="processPurchase()" disabled) Purchase Premium (₹30)

    script(src="/js/main.js")
    script.
      let subscriptionData = null;
      let selectedPaymentMethod = null;

      // Load subscription status
      async function loadSubscriptionStatus() {
        try {
          console.log('Loading subscription status...');
          const response = await RaddiWala.apiCall('/subscriptions');
          console.log('Subscription response:', response);

          if (!response) {
            throw new Error('No response received');
          }

          subscriptionData = response;
          renderSubscriptionStatus();
          updateUpgradeButton();
        } catch (error) {
          console.error('Failed to load subscription status:', error);
          document.getElementById('subscriptionStatus').innerHTML =
            \`<div class="status-header">
              <i class="fas fa-exclamation-triangle" style="color: #dc3545;"></i>
              <div>
                <h2>Failed to load subscription status</h2>
                <p style="color: #666; margin: 10px 0;">\${error.message}</p>
                <button class="upgrade-btn primary" onclick="loadSubscriptionStatus()">Retry</button>
              </div>
            </div>\`;
        }
      }

      // Render subscription status
      function renderSubscriptionStatus() {
        const statusContainer = document.getElementById('subscriptionStatus');

        if (!subscriptionData) {
          statusContainer.innerHTML = '<p>No subscription data available</p>';
          return;
        }

        const { hasActiveSubscription, subscription, monthlyPickups, canPlaceBids } = subscriptionData;

        let statusHTML = '';
        let headerClass = hasActiveSubscription ? 'premium' : '';
        let icon = hasActiveSubscription ? 'fas fa-crown' : 'fas fa-user';
        let title = hasActiveSubscription ? 'Premium Active' : 'Free Plan Active';

        statusHTML = \`
          <div class="status-header \${headerClass}">
            <i class="\${icon}"></i>
            <h2>\${title}</h2>
          </div>
          <div class="status-details">
        \`;

        if (hasActiveSubscription && subscription) {
          const expiryDate = new Date(subscription.expiryDate);
          const now = new Date();
          const daysLeft = Math.ceil((expiryDate - now) / (1000 * 60 * 60 * 24));

          statusHTML += \`
            <div class="status-item">
              <span class="status-label">Days Remaining</span>
              <span class="status-value premium">\${daysLeft} days</span>
            </div>
            <div class="status-item">
              <span class="status-label">Expires On</span>
              <span class="status-value">\${expiryDate.toLocaleDateString()}</span>
            </div>
            <div class="status-item">
              <span class="status-label">Monthly Pickups</span>
              <span class="status-value premium">\${monthlyPickups} (Unlimited)</span>
            </div>
          \`;
        } else {
          const remaining = Math.max(0, 50 - monthlyPickups);
          statusHTML += \`
            <div class="status-item">
              <span class="status-label">Monthly Pickups</span>
              <span class="status-value">\${monthlyPickups} / 50</span>
            </div>
            <div class="status-item">
              <span class="status-label">Remaining</span>
              <span class="status-value">\${remaining} pickups</span>
            </div>
            <div class="status-item">
              <span class="status-label">Status</span>
              <span class="status-value">\${canPlaceBids ? 'Active' : 'Limit Reached'}</span>
            </div>
          \`;

          if (!canPlaceBids) {
            statusHTML += \`
              <div class="warning-message">
                <i class="fas fa-exclamation-triangle"></i>
                <span>You have reached your monthly limit. Upgrade to premium for unlimited pickups.</span>
              </div>
            \`;
          }
        }

        statusHTML += '</div>';
        statusContainer.innerHTML = statusHTML;
      }

      // Update upgrade button
      function updateUpgradeButton() {
        const upgradeBtn = document.getElementById('upgradeBtn');

        if (!subscriptionData) return;

        const { hasActiveSubscription } = subscriptionData;

        if (hasActiveSubscription) {
          upgradeBtn.textContent = 'Extend Premium (+30 days)';
          upgradeBtn.className = 'upgrade-btn success';
        } else {
          upgradeBtn.textContent = 'Upgrade to Premium';
          upgradeBtn.className = 'upgrade-btn primary';
        }
      }

      // Show payment modal
      function showPaymentModal() {
        document.getElementById('paymentModal').style.display = 'flex';
        selectedPaymentMethod = null;
        document.getElementById('purchaseBtn').disabled = true;

        // Clear previous selections
        document.querySelectorAll('.payment-option').forEach(option => {
          option.classList.remove('selected');
        });
      }

      // Hide payment modal
      function hidePaymentModal() {
        document.getElementById('paymentModal').style.display = 'none';
      }

      // Select payment method
      function selectPayment(method) {
        selectedPaymentMethod = method;

        // Clear previous selections
        document.querySelectorAll('.payment-option').forEach(option => {
          option.classList.remove('selected');
        });

        // Select current option
        document.querySelector(\`[data-method="\${method}"]\`).classList.add('selected');

        // Enable purchase button
        document.getElementById('purchaseBtn').disabled = false;
      }

      // Process purchase
      async function processPurchase() {
        if (!selectedPaymentMethod) {
          RaddiWala.showNotification('Please select a payment method', 'error');
          return;
        }

        const purchaseBtn = document.getElementById('purchaseBtn');

        try {
          // Show loading
          purchaseBtn.classList.add('loading');
          purchaseBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
          purchaseBtn.disabled = true;

          // Make API call to purchase subscription
          await RaddiWala.apiCall('/subscriptions/purchase', {
            method: 'POST',
            body: JSON.stringify({
              paymentMethod: selectedPaymentMethod,
              transactionId: 'DEMO_' + Date.now()
            })
          });

          const message = subscriptionData.hasActiveSubscription ?
            'Premium subscription extended by 30 days!' :
            'Premium subscription activated successfully!';

          RaddiWala.showNotification(message, 'success');
          hidePaymentModal();

          // Reload subscription data
          await loadSubscriptionStatus();

        } catch (error) {
          console.error('Purchase failed:', error);
          RaddiWala.showNotification(error.message || 'Purchase failed. Please try again.', 'error');
        } finally {
          // Reset button
          purchaseBtn.classList.remove('loading');
          purchaseBtn.innerHTML = 'Purchase Premium (₹30)';
          purchaseBtn.disabled = false;
        }
      }

      // Load data when page loads
      document.addEventListener('DOMContentLoaded', loadSubscriptionStatus);